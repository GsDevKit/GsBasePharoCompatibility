#!/usr/bin/env superdoit_solo
# Standard options are always present unless customoptions section is used
#
#options
#{
#  SuperDoitOptionalOptionWithNoArg long: 'help' short: 'h'.
#  SuperDoitOptionalOptionWithNoArg long: 'debug' short: 'D'.
#}
#%
# Example options section
#
#options
#{
#	SuperDoitOptionalOptionWithNoArg long: 'noarg'.
#	SuperDoitOptionalOptionWithNoArg long: 'noarg' short: 'n'.
#
#	SuperDoitOptionalOptionWithRequiredArg long: 'optional'.
#	SuperDoitOptionalOptionWithRequiredArg long: 'optional' default: 'default'.
#	SuperDoitOptionalOptionWithRequiredArg long: 'optional' short: 'o'.
#	SuperDoitOptionalOptionWithRequiredArg long: 'optional' short: 'o' default: 'default'.
#
#	SuperDoitRequiredOptionWithRequiredArg long: 'required'.
#	SuperDoitRequiredOptionWithRequiredArg long: 'required' short: 'r'.
#}
#%
#
usage
-----
USAGE $basename [--help | -h] [--debug | -D]

DESCRIPTION
  <put your description here>

OPTIONS
  -h, --help                 display usage message
  -D, --debug                bring up topaz debugger in the event of a script error

EXAMPLES
  $basename --help
  $basename -h
  $basename --debug
  $basename -D
  $basename  
-----
%
specUrls
file:$GITHUB_WORKSPACE/rowan/specs/GsBasePharoCompatibility.ston
%
doit
	| testSuite testResult |
	self preDoitSpecLoad: [:loadSpec |
		loadSpec 
			customConditionalAttributes: (loadSpec customConditionalAttributes, #('tests'));
			projectsHome: '$GITHUB_WORKSPACE/..'
		].
	testSuite := (Rowan projectNamed: 'GsBasePharoCompatibility') testSuite.
	testResult := testSuite run.
	testResult printOn: self stdout.
	(testResult hasFailures or: [ testResult hasErrors ])
		ifTrue: [ self exitWithStatus: 1 ].
	^ self noResult
%
